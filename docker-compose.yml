version: '3'

services:
  # Redis for Tyk
  redis:
    image: redis:alpine
    networks:
      - api-network

  # Backend Service
  http-service:
    build:
      context: .
      dockerfile: http-service/Dockerfile
    environment:
      - PORT=8000
    networks:
      - api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Tyk Gateway
  tyk-gateway:
    build:
      context: ./tyk
    ports:
      - "8080:8080"
    networks:
      - api-network
    depends_on:
      - http-service
      - redis
    restart: unless-stopped

  # KrakenD Gateway
  krakend:
    build:
      context: ./krakend
    ports:
      - "8081:8081"
    networks:
      - api-network
    depends_on:
      - http-service
    restart: unless-stopped

  # Benchmark service
  benchmark:
    build:
      context: .
      dockerfile: benchmark/Dockerfile
    networks:
      - api-network
    depends_on:
      - tyk-gateway
      - krakend
    volumes:
      - ./results:/results

networks:
  api-network:
    driver: bridge

volumes:
  results: